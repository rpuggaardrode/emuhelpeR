% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dct_ts.R
\name{dct_ts}
\alias{dct_ts}
\title{Calculate first four DCT coefficients as time series}
\usage{
dct_ts(snd_vector, sr, freq_ceiling = 8000, step = 5, plot = TRUE)
}
\arguments{
\item{snd_vector}{A vector corresponding to a sound file.}

\item{sr}{Sample rate of \code{snd_vector}.}

\item{freq_ceiling}{Maximum frequency to be included in the spectra.
Default is \code{8000}, in which case the \code{snd_vector} is resampled to 16 kHz.}

\item{step}{Duration of time steps over which to generate spectra in ms.
Default is \code{5}}

\item{plot}{Logical; whether or not to plot the resulting time series.
Default is \code{TRUE}.}
}
\value{
A data frame with one column \code{t} indicating time, and one column
for each DCT coefficient \code{k0}, \code{k1}, \code{k2}, \code{k3}.
}
\description{
Given a vector of numbers corresponding to a sound file, will generate
DFT spectra over equidistant time steps and calculate the first four
DCT coefficients of each spectrum.
}
\examples{
# Load sound file
wav_file <- paste0('extdata/ps/f1_ses/F1-0002-car-rep1-buu-106_bndl/',
'F1-0002-car-rep1-buu-106.wav')
datapath <- system.file(wav_file, package='emuhelpeR')
x <- rPraat::snd.read(datapath)

# Extract signal vector and sample rate
sig <- x$sig[,1]
sr <- x$fs

# Get coefficients
coef <- dct_ts(snd_vector=sig, sr=sr)
}
\seealso{
This function is called by \code{\link[=dct2ssff]{dct2ssff()}} which generates these
time series for each sound file in an EMU-SDMS data base.

Spectra are generated using \code{\link[phonTools:spectralslice]{phonTools::spectralslice()}} and coefficients are
calculated using \code{\link[emuR:dct]{emuR::dct()}}.

\code{\link[=moments_ts]{moments_ts()}} is a sibling function for spectral moments.
}
