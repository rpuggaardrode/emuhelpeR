% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_praatsauce.R
\name{run_praatsauce}
\alias{run_praatsauce}
\title{Run PraatSauce from R}
\usage{
run_praatsauce(
  wav_loc,
  tg_loc = "none",
  out_loc = NULL,
  out_file = "tmp.txt",
  praat_loc = "praat",
  channel = 1,
  interval_tier = 1,
  skip_these_labels = "^$",
  point_tier = NULL,
  point_tier_labels = NULL,
  separator = "_",
  measure = "ms",
  points = 5,
  resample_to_16k = TRUE,
  pitchTracking = TRUE,
  formantMeasures = TRUE,
  spectralMeasures = TRUE,
  windowLength = 0.025,
  windowPosition = 0.5,
  maxFormantHz = 5000,
  f0min = 50,
  f0max = 300,
  timeStep = NULL,
  maxNumFormants = 5,
  preEmphFrom = 50,
  formantTracking = TRUE,
  F1ref = 500,
  F2ref = 1500,
  F3ref = 2500,
  useBandwidthFormula = FALSE
)
}
\arguments{
\item{wav_loc}{String giving the name of a directory where the .wav files
to be processed are stored. Must be the full name, there's no
path extension.}

\item{tg_loc}{String giving the name of a directory where the .TextGrid files
to be processed are stored. Default is \code{'none'}; in this case, the function
assumes that there are no TextGrids and that the entire files should be
analyzed.}

\item{out_loc}{String giving the name of a directory where the PraatSauce
output should be stored. Default is \code{NULL}; if no directory is provided,
the output is stored in a temporary folder.}

\item{out_file}{String giving the desired name of the PraatSauce output
file. Default is \code{tmp.txt} (assuming that the file is only stored in a
temporary directory anyway).}

\item{praat_loc}{String giving the location of the Praat executable on
the user's machine. Default is \code{praat}, which should be sufficient if
\code{praat.exe} is stored in the default location for executables on the user's
machine, such as the \code{system32} folder on Windows.}

\item{channel}{Number of the channel to be analyzed. Default is \code{1};
use \code{0} for stereo.}

\item{interval_tier}{Number of the interval tier to query. Default is \code{1}.}

\item{skip_these_labels}{String containing a well-formed regex giving
interval labels on \code{interval_tier} to ignore. Default is \verb{^$}, in which case
empty labels are ignored.}

\item{point_tier}{Number of a point tier to query. Default is \code{NULL} (no
point tier is queried).}

\item{point_tier_labels}{A single string containing labels of interest in
\code{point_tier} separated by spaces. Default is \code{NULL}.}

\item{separator}{String giving a character that separates variables in
filenames. Default is \verb{_}.}

\item{measure}{String giving the desired unit of distance between measures.
Default is \code{ms}, in which case measures are taken at every n ms, set by
\code{points}; another option is \code{equidist}, in which case measures are taken at
n equidistant points (also set by \code{points}).}

\item{points}{Distance between measures in the units given in \code{measure}.
Default is \code{5}.}

\item{resample_to_16k}{Boolean; should recordings be resampled to 16 kHz
prior to analysis? Default is \code{TRUE}.}

\item{pitchTracking}{Boolean; should pitch be estimated? Default is \code{TRUE}.}

\item{formantMeasures}{Boolean; should formants be estimated? Default is
\code{TRUE}.}

\item{spectralMeasures}{Boolean; should other spectral measures be estimated?
Default is \code{TRUE}.}

\item{windowLength}{Length of the analysis window. Default is \code{0.025}.}

\item{windowPosition}{Position of the analysis window. Default is \code{0.5}.}

\item{maxFormantHz}{Maximum frequency in Hz to be considered in formant
estimation. Default is \code{5000}.}

\item{f0min}{Lower limit to estimated fundamental frequency in Hz. Default is
\code{50}.}

\item{f0max}{Upper limit to estimated fundamental frequency in Hz. Default is
\code{300}.}

\item{timeStep}{Time step used to determine how close the analysis frame are
for formant measurement. Default is \code{NULL}, in which case 1/4 of the window
is used.}

\item{maxNumFormants}{Maximum number of formants to be estimated. Default is
\code{5}.}

\item{preEmphFrom}{Pre-emphasis begins at this frequency in Hz; default is
\code{50}.}

\item{formantTracking}{Boolean; should formant tracks be smoothed? Default
is \code{TRUE}.}

\item{F1ref}{Reference value for first formant used for formant smoothing.
Default is \code{500}.}

\item{F2ref}{Reference value for second formant used for formant smoothing.
Default is \code{1500}.}

\item{F3ref}{Reference value for third formant used for formant smoothing.
Default is \code{2500}.}

\item{useBandwidthFormula}{Boolean; should formant bandwidths be estimated
by the Hawks and Miller formula? Default is \code{FALSE}, in which case
Praat's estimates are used. Note that the Hawks and Miller formula can only
be used if pitch is also measured.}
}
\value{
A data frame with columns giving information about the
sound file imported from the name of the sound file, information about
the time at which measures were estimated, and the estimated measures
themselves.
}
\description{
Shell wrapper to run the PraatSauce suite of scripts written by James Kirby
for the open source signal processing software Praat. The results should be
very similar to the suite of MATLAB scripts called VoiceSauce. Computes fundamental
frequency, three formants, formant bandwidths, and a range of measures of
spectral slope and harmonics-to-noise ratio.
}
\examples{
\dontrun{
# Assuming there are wav files in the current working directory:
ps_out <- run_praatsauce(getwd())
}
}
\seealso{
As mentioned above, this function is a wrapper for a suite of
Praat scripts. More information about the scripts can be found
on GitHub: \url{https://github.com/kirbyj/praatsauce}. Information about the
VoiceSauce scripts which PraatSauce is based on can be found here:
\url{http://www.phonetics.ucla.edu/voicesauce/}.

The function \code{\link[=praatsauce2ssff]{praatsauce2ssff()}} will convert measures from PraatSauce to
SSFF files and add them to EMU database.
}
