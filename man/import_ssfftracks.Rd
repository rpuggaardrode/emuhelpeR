% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_ssfftracks.R
\name{import_ssfftracks}
\alias{import_ssfftracks}
\title{Import all available SSFF tracks from EMU database and process the raw data}
\usage{
import_ssfftracks(
  db_handle,
  seg_list,
  f0col = "F0",
  f0dep = NULL,
  fncol = NULL,
  fndep = NULL,
  speaker = NULL,
  group_var = NULL,
  timing_rm = NULL,
  proc = TRUE
)
}
\arguments{
\item{db_handle}{The handle of an EMU database which is already loaded in R.}

\item{seg_list}{A data frame containing a list of segments from which to
import SSFF track measurements. Should be generated with \link[emuR:query]{emuR::query}.}

\item{f0col}{A string containing the name of the SSFF track that contains
fundamental frequency values. Can be checked using
\code{\link[emuR:AddListRemoveSsffTrackDefinition]{emuR::list_ssffTrackDefinitions()}}.
Optional; default is \code{F0}. Only used if \code{proc=TRUE}.}

\item{f0dep}{One or more strings containing the name of SSFF tracks
containing measures that are directly dependent on fundamental frequency.
Optional; default is \code{NULL}. Only used if \code{proc=TRUE}.}

\item{fncol}{One or more strings containing the names of SSFF tracks that
contain formant measurements
Optional; default is \code{NULL}. Only used if \code{proc=TRUE}.}

\item{fndep}{A list where each element contains two strings:
\itemize{
\item The name of an SSFF track that is directly dependent on a specific formant.
\item Which formant the measure is dependent on.
}

The structure is as follows:
\verb{fndep=list(c('F1dep', 'F1'), c('F2dep', 'F2')}

Optional; default is \code{NULL}. Only used if \code{proc=TRUE}.}

\item{speaker}{An optional string giving the name of the column in \code{seg_list}
containing speakers id's.
Default is \code{NULL}. If \code{speaker=NULL} and \code{proc=TRUE}, z-score
normalization will be done on the basis of the data at large and no rescaled
values will be returned.}

\item{group_var}{One or more strings containing the names of columns in
\code{seg_list} to be used as grouping variables for automatic outlier removal.
Optional; default is \code{NULL}. If \code{group_var=NULL} and \code{proc=TRUE},
automatic outlier removal will
be based on means and standard deviation in the data at large.}

\item{timing_rm}{An optional list with two arguments:
\itemize{
\item A string containing the label associated with a boundary in the data.
Values that are measured sufficiently far from this boundary are recoded as
\code{NA}. This label should be stored in the column \code{labels} in \code{seg_list}.
\item A number indicating the distance from this boundary at which measurements
should be ignored. See example below.
}

#' Optional; default is \code{NULL}.}

\item{proc}{A Boolean. Default is \code{TRUE}; if \code{FALSE}, the function only
returns raw measurement values and does not perform any preprocessing.}
}
\value{
A data frame with the same structure as \code{seg_list} containing columns
with all measurements available in the SSFF database. Optionally also contains
columns with normalized and rescaled values for all measurements.
}
\description{
For a given EMU database and segment list, \code{import_ssfftracks} will import
measurements from all available SSFF tracks and store them in a data frame
with the same structure and information as the supplied segment list.
}
\details{
\code{import_ssfftracks} also optionally performs automated outlier removal
of fundamental frequency and formants by recoding
zero values as \code{NA} and recoding values as \code{NA} if they fall outside of
three standard deviations from the mean value within the same group.
Corresponding easures which directly depend on fundamental frequency and
formants are also recoded as \code{NA}. Additionally, by-speaker z-score
normalization is performed of all measures is performed and stored in a
separate column, and these are subsequently rescaled based on the overall
mean and SD values.

Optionally, F0 values that are measured too far away from a boundary specified
by the user are coded as \code{NA}.
}
\examples{
datapath <- system.file('extdata/db', package='emuhelpeR')
raw <- emuR::load_emuDB(datapath)
dplyr::glimpse(seg_list)
x <- import_ssfftracks(db_handle=raw, seg_list=seg_list, f0col='praatF0',
f0dep='H1H2c', fncol=c('praatF1', 'praatF2', 'praatF3'),
fndep=list(c('H1A1c', 'F1'), c('H1A3c', 'F3')), speaker='speaker',
group_var=c('speaker', 'vowel'), timing_rm=list('cl', 250))
dplyr::glimpse(x)
y <- import_ssfftracks(db_handle=raw, seg_list=seg_list, f0col='praatF0',
proc=FALSE)
dplyr::glimpse(y)
}
\seealso{
This function assumes that the user has data stored in EMU database
(see \link{emuR}), that the database has already been loaded into R using
\code{emuR::load_emuDB()}, and has generated a list with relevant portions of that
database using \code{\link[emuR:query]{emuR::query()}}.

The data processing used in \code{import_ssfftracks} makes use of other \code{emuhelpeR}
functions \code{\link[=f0_proc]{f0_proc()}}, \code{\link[=fn_proc]{fn_proc()}}, and \code{\link[=normz]{normz()}}, which can all be used
independently.
}
